package info.mastera.leetcode.findTheDifference389;

import java.util.Arrays;

/**
 * 389. Find the Difference
 * Easy
 * 3.5K
 * 409
 * Companies
 * You are given two strings s and t.
 * <p>
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * <p>
 * Return the letter that was added to t.
 * <p>
 * <p>
 * <p>
 * Example 1:
 * <p>
 * Input: s = "abcd", t = "abcde"
 * Output: "e"
 * Explanation: 'e' is the letter that was added.
 * Example 2:
 * <p>
 * Input: s = "", t = "y"
 * Output: "y"
 * <p>
 * <p>
 * Constraints:
 * <p>
 * 0 <= s.length <= 1000
 * t.length == s.length + 1
 * s and t consist of lowercase English letters.
 */
public class Solution {

    public char findTheDifference1(String s, String t) {
        int[] alphabet = new int[26];

        for (char c : s.toCharArray()) {
            alphabet[c - 'a']++;
        }
        for (char c : t.toCharArray()) {
            alphabet[c - 'a']--;
            if (alphabet[c - 'a'] < 0) {
                return c;
            }
        }
        return 'd';
    }

    public char findTheDifferenceFastest(String s, String t) {
        char result = 0;
        for (char c : s.toCharArray()) {
            result ^= c;
        }
        for (char c : t.toCharArray()) {
            result ^= c;
        }
        return result;
    }

    // slowest
    public char findTheDifference(String s, String t) {
        var source = s.toCharArray();
        Arrays.sort(source);
        var target = t.toCharArray();
        Arrays.sort(target);
        for (int i = 0; i < s.length(); i++) {
            if (source[i] != target[i]) return target[i];
        }
        return target[t.length() - 1];
    }
}
